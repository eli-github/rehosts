# name: Release on New Tag

# on:
#   push:
#     tags:
#       - '*' # Triggers on any new tag

# jobs:
#   build_and_release:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Get tag name
#         run: echo "Tag name is ${{ github.ref_name }}"

#       - name: Perform release steps
#         run: |
#           echo "Building and releasing for tag ${{ github.ref_name }}"
#           # Add your build, test, and release commands here


name: Release

on:
  workflow_dispatch:
    inputs:
      commit:
        description: "Commit (e.g., 52f0348)"
        default: "master"

permissions:
  contents: read

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Echo github.event.inputs.commit
        run: echo ${{ github.event.inputs.commit }}
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25.1'

      # - name: Check out code
      #   uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
      #   with:
      #     ref: ${{ github.event.inputs.commit }}
      - name: Checkout CoreDNS
        uses: actions/checkout@v5
        with:
          repository: 'eli-github/coredns'
          # repository: 'coredns/coredns'
          ref: 'v1.12.4'

      - name: Patch plugin.cfg
        run: |
          bash <(curl -s curl https://raw.githubusercontent.com/eli-github/rehosts/master/add_reauto_to_plugins.sh)
          echo $PATH
          cat plugin.cfg
          go generate
          go get github.com/eli-github/rehosts
          echo "AFTER go generate"
          cat core/plugin/zplugin.go


      # - name: Build
      #   run: echo ${{ github.sha }} > Release.txt
      # - name: Test
      #   run: cat Release.txt
      # - name: Release
      #   uses: softprops/action-gh-release@v2
      #   # if: github.ref_type == 'tag'
      #   with:
      #     name: pub Name
      #     tag_name: "v0.0.0"
      #     files: Release.txt
      # - name: stop script
      #   run: exit 1
      - name: Set up info
        run: |
          set -x -e
          VERSION=$(make -f Makefile.release version)
          COMMIT=$(git rev-parse --quiet --verify ${{ github.event.inputs.commit }})
          # if [[ "$(git tag -l v${VERSION})" == "v${VERSION}" ]]; then
          #   echo "v${VERSION} already released"
          #   exit 1
          # fi
          echo "commit=${COMMIT}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
        id: info
      - name: Build release binary
        run: make -f Makefile.release release
      - name: Build release binary sha256
        run: (cd release; for asset in `ls -A *tgz`; do sha256sum $asset > $asset.sha256; done)
      - name: Remove hidden section
        run: sed '/+++/,//d' notes/coredns-${{ steps.info.outputs.version}}.md > release.md
      - name: Log release info
        run: |
          set -x -e
          git log -1
          echo ${{ steps.info.outputs.commit }}
          echo ${{ steps.info.outputs.version }}
          # cat release.md
          sha256sum release/*.tgz
      - name: Draft release
        uses: softprops/action-gh-release@6cbd405e2c4e67a21c47fa9e383d020e4e28b836  # v2.3.3
        with:
          body_path: release.md
          name: v${{ steps.info.outputs.version }}
          tag_name: v${{ steps.info.outputs.version }}
          # target_commitish: ${{ steps.info.outputs.commit }}
          repository: eli-github/rehosts
          files: |
            release/*.tgz
            release/*.tgz.sha256
          draft: false
